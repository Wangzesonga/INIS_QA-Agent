name: Daily INIS QA Check

on:
  schedule:
    # Run daily at 4:00 AM UTC (adjust timezone as needed)
    - cron: '00 04 * * *'
    # - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      date:
        description: 'Date to process (YYYY-MM-DD, defaults to yesterday)'
        required: false
        type: string
      apply_corrections:
        description: 'Apply corrections to INIS production (requires INIS_ACCESS_TOKEN)'
        required: false
        type: boolean
        default: false
  
jobs:
  qa-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run INIS QA Automation
      env:
        # Azure OpenAI Configuration
        AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        ENDPOINT_URL: ${{ secrets.ENDPOINT_URL }}
        DEPLOYMENT_NAME: ${{ secrets.DEPLOYMENT_NAME }}
        
        # Email Configuration
        FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
        EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}
        TO_EMAIL: ${{ secrets.TO_EMAIL }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ secrets.SMTP_PORT }}
        
        # INIS API Configuration (for automatic correction application)
        INIS_ACCESS_TOKEN: ${{ secrets.INIS_ACCESS_TOKEN }}
        INIS_API_BASE_URL: ${{ secrets.INIS_API_BASE_URL }}
      run: |
        # Build command with date parameter if provided
        CMD="python inis_daily_qa_automation.py"
        
        if [ -n "${{ github.event.inputs.date }}" ]; then
          CMD="$CMD --date ${{ github.event.inputs.date }}"
        fi
        
        # Handle correction application option
        if [ "${{ github.event.inputs.apply_corrections }}" = "true" ]; then
          CMD="$CMD --apply-corrections"
          echo "üîß Force enabling correction application to INIS"
        elif [ "${{ github.event.inputs.apply_corrections }}" = "false" ]; then
          CMD="$CMD --no-apply-corrections"
          echo "üõ°Ô∏è Disabling correction application to INIS"
        else
          echo "ü§ñ Auto-mode: Will apply corrections if INIS token is available"
        fi
        
        echo "Executing: $CMD"
        $CMD
        
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: qa-logs
        path: |
          *.log
          /tmp/inis_qa_*/
        retention-days: 7
